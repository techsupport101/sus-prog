{"mode":"Blocks","hardwareTarget":"brain","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable><variable type=\"broadcast_msg\" id=\"GY^7kf~6I%Q*U)%A]Nw#\">message1</variable><variable type=\"broadcast_msg\" id=\"#`Fawh`yCS=.hU7LDaSh\">CheckBlue</variable><variable type=\"broadcast_msg\" id=\"dP9E}]RL)|yf=x;*X4WK\">CheckRed</variable></variables><block type=\"v5_events_when_broadcasted\" id=\"]J=$XwMh`X-HSl*k=ILl\" x=\"570\" y=\"30\"><field name=\"BROADCAST_OPTION\" id=\"dP9E}]RL)|yf=x;*X4WK\" variabletype=\"broadcast_msg\">CheckRed</field><next><block type=\"v5_sensing_snapshot\" id=\"dmE8p@Cw6/7K[%xT(eL4\"><field name=\"VISION\">Vision13</field><field name=\"SIGNATURE\">SIG_2</field><next><block type=\"v5_control_if_then\" id=\"d!6A##th/{;YRR-A{jH7\"><value name=\"CONDITION\"><block type=\"v5_sensing_object_exists\" id=\"8K[[VP7E2F2:!ofK0})]\"><field name=\"VISION\">Vision13</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_controller_play_rumble\" id=\"Wm0kllC?,BVf_XJ=nmO@\"><field name=\"PATTERN\">....</field><field name=\"CONTROLLER\">Controller1</field><next><block type=\"v5_control_wait\" id=\"Uri6}V+LywxYL5t+Gxap\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"34.T~?nA!JB6m++1RG,S\"><field name=\"NUM\">0.085</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"jZ+}0EUaq~};f8Cw60sS\"><field name=\"MOTOR\">Intake</field><field name=\"MODE\">brake</field><next><block type=\"v5_motion_stop_motor\" id=\"lJ0u@Fa(R8;XC235eIJ4\"><field name=\"MOTOR\">Intake</field><next><block type=\"v5_control_wait\" id=\".Q,yf$[2t+B/YeG@fuI!\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"C*xkU[ukq%=kSe+PdpK1\"><field name=\"NUM\">0.01</field></shadow></value><next><block type=\"v5_motion_set_motor_stopping\" id=\"wgAbr}:qcUje)Xy,Yld{\"><field name=\"MOTOR\">Intake</field><field name=\"MODE\">coast</field></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"120\" y=\"124\"><next><block type=\"v5_motion_set_motor_velocity\" id=\"8}$C8yxTmdpf.P@/)sJW\"><field name=\"MOTOR\">Intake</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"M*-qU0I|Ns6afPD+;gYK\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"iYC7FH%#O[BbVVPC-Vo0\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"CIvBKL4t.3l*9I2Re9EK\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"~l[[%,Ee:2[;!_~NQ!9_\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"YqT=LtIC]g$,bQvX{9|K\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"z[BL2:4gW?_EitrK9|2(\"><field name=\"MOTOR\">BackRight</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"qEhEVq2X.S?B}(lF]/kY\"><field name=\"MOTOR\">BackLeft</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_set_motor_stopping\" id=\"`T*Th(anxq7.-knb3dGk\"><field name=\"MOTOR\">Intake</field><field name=\"MODE\">coast</field><next><block type=\"v5_control_forever\" id=\".2^UYmW@6nO+Pmxf-Q(Y\"><statement name=\"SUBSTACK\"><block type=\"v5_motion_set_motor_velocity\" id=\"6YfR%cYi}W,yx2D$0=3H\"><field name=\"MOTOR\">BackLeft</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"j$r[WiJ4v9c=T%Tj{5kk\"><field name=\"NUM\">50</field></shadow><block type=\"v5_operator_add\" id=\"TNV4Bd8i/{wN1k9cDN|0\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"j*o{m7#~X|^HiBf,3.{D\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"oX5Y!tX+LG}Wzk,^50EY\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis1</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"W;hZJq/fyyxKc)U35@z;\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"p35}rV=8aedm[Tbe*JNR\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis3</field></block></value></block></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"x;/zgpqX$qM{viZrV(uX\"><field name=\"MOTOR\">BackRight</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"d~GEqsT[{PQ-7~e,yr|%\"><field name=\"NUM\">50</field></shadow><block type=\"v5_operator_subtract\" id=\"dGPSXW6FN8OL?sP_WKAo\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"gT8GPHD2y?[|=dh.9W=`\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"LL$0n;mFmfv^Xre:?Z`5\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis1</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"=,KM$l6pWac?ayZ*a!Hy\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"==WZoKO.-0z~.6deoJ[)\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis3</field></block></value></block></value><next><block type=\"v5_events_broadcast\" id=\"_M}j:sVFOw)EtoEa6[tG\"><field name=\"BROADCAST_OPTION\" id=\"dP9E}]RL)|yf=x;*X4WK\" variabletype=\"broadcast_msg\">CheckRed</field></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","robotConfig":[{"port":[19,20,11,12,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio6_1","gearRatio":"1:1","direction":"rev","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"Intake","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"split","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"BackRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[10],"name":"BackLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[21],"name":"Intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[13],"name":"Vision13","customName":false,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":50,\"signatures\":[{\"name\":\"SIG_1\",\"parameters\":{\"uMin\":-5393,\"uMax\":-3641,\"uMean\":-4517,\"vMin\":5825,\"vMax\":8963,\"vMean\":7394,\"rgb\":1451585,\"type\":0,\"name\":\"SIG_1\"},\"range\":1},{\"name\":\"SIG_2\",\"parameters\":{\"uMin\":5939,\"uMax\":10447,\"uMean\":8193,\"vMin\":-2259,\"vMax\":-437,\"vMean\":-1348,\"rgb\":4006173,\"type\":0,\"name\":\"SIG_2\"},\"range\":1},{\"name\":\"SIG_3\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_3\"},\"range\":2.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","minVersion":"3.1.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor leftMotorA = motor(PORT19, ratio6_1, true);\nmotor leftMotorB = motor(PORT20, ratio6_1, true);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT11, ratio6_1, false);\nmotor rightMotorB = motor(PORT12, ratio6_1, false);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1);\n\ncontroller Controller1 = controller(primary);\nmotor BackRight = motor(PORT1, ratio6_1, false);\n\nmotor BackLeft = motor(PORT10, ratio6_1, false);\n\nmotor Intake = motor(PORT21, ratio6_1, false);\n\n/*vex-vision-config:begin*/\nvision::signature Vision13__SIG_1 = vision::signature (1, -5393, -3641, -4517,5825, 8963, 7394,1, 0);\nvision::signature Vision13__SIG_2 = vision::signature (2, 5939, 10447, 8193,-2259, -437, -1348,1, 0);\nvision Vision13 = vision (PORT13, 50, Vision13__SIG_1, Vision13__SIG_2);\n/*vex-vision-config:end*/\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool Controller1LeftShoulderControlMotorsStopped = true;\nbool DrivetrainLNeedsToBeStopped_Controller1 = true;\nbool DrivetrainRNeedsToBeStopped_Controller1 = true;\n\n// define a task that will handle monitoring inputs from Controller1\nint rc_auto_loop_function_Controller1() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = Axis3 + Axis1\n      // right = Axis3 - Axis1\n      int drivetrainLeftSideSpeed = Controller1.Axis3.position() + Controller1.Axis1.position();\n      int drivetrainRightSideSpeed = Controller1.Axis3.position() - Controller1.Axis1.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller1) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller1 = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller1) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller1 = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller1 = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller1) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller1) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n      // check the ButtonL1/ButtonL2 status to control Intake\n      if (Controller1.ButtonL1.pressing()) {\n        Intake.spin(forward);\n        Controller1LeftShoulderControlMotorsStopped = false;\n      } else if (Controller1.ButtonL2.pressing()) {\n        Intake.spin(reverse);\n        Controller1LeftShoulderControlMotorsStopped = false;\n      } else if (!Controller1LeftShoulderControlMotorsStopped) {\n        Intake.stop();\n        // set the toggle so that we don't constantly tell the motor to stop when the buttons are released\n        Controller1LeftShoulderControlMotorsStopped = true;\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller1(rc_auto_loop_function_Controller1);\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\nevent message1 = event();\nevent CheckBlue = event();\nevent CheckRed = event();\n\n// \"when I receive CheckRed\" hat block\nvoid onevent_CheckRed_0() {\n  Vision13.takeSnapshot(Vision13__SIG_2);\n  if (Vision13.objectCount > 0) {\n    Controller1.rumble(\"....\");\n    wait(0.085, seconds);\n    Intake.setStopping(brake);\n    Intake.stop();\n    wait(0.01, seconds);\n    Intake.setStopping(coast);\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Intake.setVelocity(100.0, percent);\n  Drivetrain.setDriveVelocity(100.0, percent);\n  Drivetrain.setTurnVelocity(100.0, percent);\n  BackRight.spin(forward);\n  BackLeft.spin(forward);\n  Intake.setStopping(coast);\n  while (true) {\n    BackLeft.setVelocity((Controller1.Axis1.position() + Controller1.Axis3.position()), percent);\n    BackRight.setVelocity((Controller1.Axis1.position() - Controller1.Axis3.position()), percent);\n    CheckRed.broadcast();\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // register event handlers\n  CheckRed(onevent_CheckRed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}